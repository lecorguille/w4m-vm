- hosts: w4mdev-azerty w4mprod-azerty
  roles:
      - azerty

- hosts: all
  vars:
    supervisor_socket_user: galaxy
    supervisor_socket_chown: galaxy
    galaxy_user: vagrant
    galaxy_restart_handler_name: Start Galaxy
    galaxy_server_dir: "/home/vagrant/galaxy"
    galaxy_config_dir: "{{ galaxy_server_dir }}/config"
    galaxy_mutable_config_dir: "{{ galaxy_config_dir }}"
    galaxy_mutable_data_dir: "{{ galaxy_server_dir }}/database"
    galaxy_venv_dir: "{{ galaxy_server_dir }}/.venv"
    galaxy_vcs: git
    galaxy_fetch_dependencies: yes
    galaxy_fetch_eggs: yes
    galaxy_manage_static_setup: yes
    galaxy_manage_mutable_setup: no
    galaxy_manage_database: yes
    galaxy_changeset_id: release_18.09
    galaxy_force_checkout: yes
    galaxy_config_style: 'yaml' # TODO to try
    galaxy_config:
      "server:main":
        "host": "0.0.0.0"
      "app:main":
        job_working_directory: "{{ galaxy_config_dir }}/job_working_directory"
        tool_config_file: "{{ galaxy_config_dir }}/tool_conf.xml,{{ galaxy_shed_tool_conf_file }}"
        tool_sheds_config_file: "{{ galaxy_config_dir }}/tool_sheds_conf.xml"
        master_api_key: "admin"
#        tool_dependency_dir: "/deps"
        admin_users: "admin@w4m.org"
        conda_auto_init: True
        conda_auto_install: True
        dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
  roles:
    - prerequisites
      #    - name: pip
      #      pip_package: python3-pip
      #      become: yes
    - galaxy
    - galaxy-config
      #    - name: supervisor
      #      supervisor_programs:
      #        - name: galaxy
      #          state: present
      #          command: uwsgi --ini {{ galaxy_config_dir }}/galaxy.ini
      #          configuration: |
      #            autostart=true
      #            autorestart=true
      #            startretries=1
      #            startsecs=10
      #            user={{ galaxy_user }}
      #            umask=022
      #            directory={{ galaxy_server_dir }}
      #            environment=HOME={{ galaxy_mutable_data_dir }},VIRTUAL_ENV={{ galaxy_venv_dir }},PATH={{ galaxy_venv_dir }}/bin:%(ENV_PATH)s
      #      become: yes
  handlers:
    - name: Start Galaxy
      #      command: "systemctl start --now galaxy.service"
      systemd:
        name: galaxy.service
        state: started
      become: yes
      
        #  tasks:
        #      - name: Enable and start Galaxy service
        #        command: "systemctl --user enable --now galaxy.service"
